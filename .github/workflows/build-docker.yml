name: Publish Docker

on:
  workflow_call:
    inputs:
      fetchPackageJson:
        description: Fetch package.json from artifacts
        type: boolean
  workflow_dispatch:

env:
  TAG_PREFIX: smtp2graph/smtp2graph
  TAG_SUFFIX_TEST: test

jobs:
  publish-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Download package.json
        if: ${{ inputs.fetchPackageJson }}
        uses: actions/download-artifact@v4
        with:
          name: package-json

      - name: Install dependencies
        run: npm ci

      - name: Build SMTP2Graph
        run: npm run build

      - name: Read package.json
        id: manifest
        uses: zoexx/github-action-json-file-properties@1.0.4
        with:
          file_path: package.json

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          build-args: VERSION=${{ steps.manifest.outputs.version }}
          tags: ${{ env.TAG_PREFIX }}:${{ env.TAG_SUFFIX_TEST }}

      - name: Test image
        run: docker run -v .:/data --entrypoint /bin/test.sh ${{ env.TAG_PREFIX }}:${{ env.TAG_SUFFIX_TEST }}

      - name: Get major version number
        id: majorversion
        run: |
          echo major_version=$(echo "${{ steps.manifest.outputs.version }}" | cut -d'.' -f1) >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.TAG_PREFIX}}:latest,${{ env.TAG_PREFIX}}:v${{ steps.manifest.outputs.version }},${{ env.TAG_PREFIX }}:v${{ steps.majorversion.outputs.major_version }}
